{
  "name": "Recover all maneuvers",
  "type": "script",
  "scope": "global",
  "author": "jI6iseAymTC0jkXd",
  "img": "icons/svg/upgrade.svg",
  "command": "function isManeuver(item) {\n    return (item.type===\"pf1-pow.maneuver\" && item.system.uses.value < item.system.uses.max);\n}\n\nfunction getManeuvers(actor) {\n    return (actor.items.filter(isManeuver))\n}\n\nfunction getManeuverOptions(maneuvers) {\n    return (maneuvers.map(maneuver => maneuver.name))\n}\n\nvar options = \"\";\ntry {\n\tvar actor = game.actors.get(canvas.tokens.controlled[0].document.actorId);\n} catch (error) {\n\tvar actor = game.users.current.character;\n\tif (actor === null)\n\t{\n\t\tui.notifications.error(\"Please select an actor token or pick a character in user configuration.\");\n\t\treturn ;\n\t}\n}\n\ngetManeuverOptions(getManeuvers(actor)).forEach(maneuver => options += '<option value=\"' + maneuver + '\">' + maneuver + '</option>');\nconst duoPartner = actor._rollData.duoPartner;\n\nif (options === \"\")\n{\n    ui.notifications.error(\"You don't have any maneuvers to recover!\");\n    return ;\n}\n\ngetManeuvers(actor).forEach(maneuver => {\n\t\tmaneuver.update({'system.uses.value': maneuver.system.uses.maxFormula});\n    })\nif (duoPartner)\n\tgetManeuvers(duoPartner).forEach(maneuver => {\n\t\tmaneuver.update({'system.uses.value': maneuver.system.uses.maxFormula});\n    })\nui.notifications.info(\"Recovered all maneuvers.\");",
  "folder": null,
  "ownership": {
    "default": 0,
    "jI6iseAymTC0jkXd": 3
  },
  "flags": {
    "core": {},
    "scene-packer": {
      "hash": "f37dffd6469fb8d91dca7743f5d8a8bef86a2f32",
      "sourceId": "Macro.XlONTEKnLt1Jphen"
    }
  },
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "coreVersion": "12.331",
    "systemId": "pf1",
    "systemVersion": "11.3",
    "createdTime": 1743847116680,
    "modifiedTime": 1743847116680,
    "lastModifiedBy": "jI6iseAymTC0jkXd"
  },
  "_id": "7MRE8GSasCPGFC0o",
  "sort": 0,
  "_key": "!macros!7MRE8GSasCPGFC0o"
}
