{
  "name": "Use Maneuver",
  "type": "script",
  "scope": "global",
  "author": "jI6iseAymTC0jkXd",
  "img": "icons/svg/sword.svg",
  "command": "function isManeuver(item) {\n    return (item.type===\"pf1-pow.maneuver\" && item.system.uses.value > 0 && !item.system.disabled);\n}\n\nfunction isAttack(item) {\n\treturn (item.type===\"attack\" && (item.system.uses.value === null || item.system.uses.value > 0))\n}\n\nfunction getManeuvers(actor) {\n    return (actor.items.filter(isManeuver))\n}\n\nfunction getManeuverOptions(maneuvers) {\n    return (maneuvers.map(maneuver => maneuver.name))\n}\n\nfunction getAttacks(actor) {\n\treturn (actor.items.filter(isAttack));\n}\n\nfunction displayAttacks(actor, maneuver) {\n\td = new Dialog({\n\t\ttitle: 'Select attack',\n\t\tcontent: `\n\t\t<form class=\"flexcol\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label for=\"attackSelect\">Select an attack</label>\n\t\t\t\t<select name=\"attackSelect\">` + getAttacks(actor).map(attack => {\n\t\t\t\t\tif (maneuver.system.defaultAttack !== undefined && attack.name === maneuver.system.defaultAttack.name)\n\t\t\t\t\t\treturn '<option value=\"' + attack.name + '\" selected>' + attack.name + '</option>';\n\t\t\t\t\telse\n\t\t\t\t\t\treturn '<option value=\"' + attack.name + '\">' + attack.name + '</option>';\n\t\t\t\t}) + `</select>\n\t\t\t</div>\n\t\t</form>\n\t\t`,\n\t\tbuttons: {\n\t\t\tyes: {\n\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\tlabel: 'Use attack',\n\t\t\t\tcallback: (html) => {\n\t\t\t\t\tlet select = html.find('[name=\"attackSelect\"]').val();\n\t\t\t\t\tgetAttacks(actor).forEach(attack => {\n\t\t\t\t\t\tif (attack.name === select) {\n\t\t\t\t\t\t\tattack.use();\n\t\t\t\t\t\t\tmaneuver.update({'system.defaultAttack': attack});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t}).render(true);\n}\n\nvar options = \"\";\ntry {\n\tvar actor = game.actors.get(canvas.tokens.controlled[0].document.actorId);\n} catch (error) {\n\tui.notifications.error(\"Please select an actor token.\");\n\treturn ;\n}\n\ngetManeuverOptions(getManeuvers(actor)).forEach(maneuver => options += '<option value=\"' + maneuver + '\">' + maneuver + '</option>');\n\nif (options === \"\")\n{\n    ui.notifications.error(\"You don't have any maneuvers left!\");\n    return ;\n}\n\nlet d = new Dialog({\n  title: 'Use maneuver',\n  content: `\n    <form class=\"flexcol\">\n      <div class=\"form-group\">\n        <label for=\"maneuverSelect\">Select a maneuver</label>\n        <select name=\"maneuverSelect\">` + options + `\n\t</select>\n      </div>\n      <div class=\"form-group\">\n\t<label for=\"weaponGroup\">Discipline Weapon Group</label>\n\t<input type=\"checkbox\" id=\"weaponGroup\" name=\"weaponGroup\"/>\n      </div>\n    </form>\n  `,\n  buttons: {\n    yes: {\n      icon: '<i class=\"fas fa-check\"></i>',\n      label: 'Use maneuver',\n      callback: (html) => {\n        let select = html.find('[name=\"maneuverSelect\"]').val();\n        getManeuvers(actor).forEach(maneuver => {\n        if (maneuver.name === select)\n\t{\n\tlet msgContent = `\n<div class=\"pf1 chat-card item-card\" data-actor-id=\"d7b1wLXaup7peK0a\" data-item-id=\"\">\n  <header class=\"card-header type-color type-pf1-pow.maneuver flexrow\">\n    <img src=\"` + maneuver.img + `\" data-tooltip=\"` + maneuver.name + `\" width=\"36\" height=\"36\">\n    <div class=\"item-name\">\n      <h3>` + maneuver.name +`</h3>\n    </div>\n  </header>\n\n  <div class=\"card-content\">\n    <section class=\"item-description\">\n      ` + maneuver.system.description.value + `\n    </section>\n  </div>\n\n  <footer class=\"card-footer\">\n\n\n  </footer>\n</div>`;\n\tif (maneuver.system.saveType != 'None' && maneuver.system.saveType != 'Special')\n\t{\n\t\tlet dc = 10 + maneuver.system.level + actor.system.abilities[actor.system.attributes.maneuverAttr].mod;\n\t\tvar bonus = html.find('[name=\"weaponGroup\"]')[0].checked\n\t\tif (bonus)\n\t\t\tdc += 2;\n\t\tlet saveType = maneuver.system.saveType === \"Fortitude\" ? \"fort\" : maneuver.system.saveType === \"Will\" ? \"will\" : maneuver.system.saveType === \"Reflex\" ? \"ref\" : undefined;\n\t\tmsgContent += `<div class=\"chat-attack\" data-index=\"0\">\n\t<div class=\"card-button-group flexcol\">\n\t\t\t\t\t\t<button data-action=\"save\" data-dc=\"` + dc + `\" data-type=\"` + saveType + `\" data-gm-sensitive-inner=\"` + maneuver.system.saveType + ` Save\" data-tags=\"\">` + maneuver.system.saveType + ` DC `+ dc +`</button>\n\t\t\t\t\t</div>\n\n    \n\t\t\t\t</div>`\n\t}\n\t\tif (maneuver.system.maneuverType == \"Strike\")\n\t\t\tdisplayAttacks(actor, maneuver);\n\t\tif (maneuver.system.maneuverType != 'Stance')\n\t\t\tmaneuver.update({'system.uses.value': maneuver.system.uses.value - 1});\n\t\tlet chatData = {\n\t\t\tuser: game.user._id,\n\t\t\tspeaker: ChatMessage.getSpeaker(),\n\t\t\tcontent: msgContent,\n\t\t\ttype:0\n\t\t};\n\t\tChatMessage.create(chatData, {});\n\t}\n    })\n      }\n    },\n  },\n  default: 'yes'\n}).render(true)",
  "folder": null,
  "ownership": {
    "default": 0,
    "jI6iseAymTC0jkXd": 3
  },
  "flags": {
    "core": {}
  },
  "_stats": {
    "systemId": "pf1",
    "systemVersion": "10.8",
    "coreVersion": "12.331",
    "createdTime": 1729338675027,
    "modifiedTime": 1740221902236,
    "lastModifiedBy": "jI6iseAymTC0jkXd",
    "compendiumSource": null,
    "duplicateSource": null
  },
  "_id": "pkH9ZHJk5ksHEhX1",
  "sort": 300000,
  "_key": "!macros!pkH9ZHJk5ksHEhX1"
}
